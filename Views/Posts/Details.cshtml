@model Blog.Models.Post

@{
    ViewBag.Title = "Details";
}

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Blog Post - Start Bootstrap Template</title>

    <!-- Bootstrap Core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="css/blog-post.css" rel="stylesheet">


    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

</head>

<body>

    <!-- Page Content -->
    <div class="container">

        <div class="row">

            <!-- Blog Post Content Column -->
            <div class="col-md-8" >

                <!-- Blog Post -->
                <!-- Title -->
                <h2>@Model.Title</h2>

                <!-- Author -->
                <p class="lead">
                    by Chris Rose
                </p>

                <!-- Date/Time -->
                @if (Model.Updated.HasValue)
                {
                    <p><span class="glyphicon glyphicon-time"></span>@Model.Updated.Value.LocalDateTime</p>
                }
                else
                {
                    <p><span class="glyphicon glyphicon-time"></span>@Model.Created.LocalDateTime   </p>
                }

                <!--MediaURL-->
                @if (Model.MediaURL != null)
                {
                    <img class="img-responsive" src="@Url.Content(Model.MediaURL)" alt="" id="detailsImage"/>
                }

                <!-- Post Content -->
                <p class="lead"> @Html.Raw(Model.Body) </p>

                            <p><h6>Leave a Comment:</h6></p>
                            <form role="form" action="@Url.Action("Create","Comments")" method="post">
                            <div class="form-group">
                                <input type="hidden" name="PostId" value="@Model.Id" />
                                <textarea class="form-control" rows="1" type="hidden" name="body"></textarea>
                            </div>
                                <!--Hide submit button for comments unless user is logged in-->
                                @if (!User.Identity.IsAuthenticated)
                                {
                                    <h5>Please Log In to leave a comment</h5>
                                    @Html.ActionLink("Log In", "Login", "Account", null, new { @class = "btn btn-default" }) 
                                    
                                }
                                else 
                                {
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                }
                            </form> <br />
                <!-- Blog Comments -->
                @foreach (var comment in Model.Comments)
                {
                    <div>
                        <p><h6>On @comment.Created.LocalDateTime, @comment.Author.DisplayName wrote:</h6></p>
                        <p>@comment.Body</p>

                        @if (User.IsInRole("Admin"))
                        {
                            @Html.ActionLink("Edit", "Edit", "Comments", new { id = comment.Id }, new { @class = "btn btn-default" })
                            @Html.ActionLink("Delete", "Delete", "Comments", new { id = comment.Id }, new { @class = "btn btn-default" })
                        }
                        @if (User.IsInRole("Moderator"))
                        {
                            @Html.ActionLink("Edit", "Edit", "Comments", new { id = comment.Id }, new { @class = "btn btn-default" })
                            @Html.ActionLink("Delete", "Delete", "Comments", new { id = comment.Id }, new { @class = "btn btn-default" })
                        }
                    </div>
                }
                         
                  <hr>
                @Html.ActionLink("Back", "Index", "Posts", new { @class = "btn btn-default" }) 

                </div>
       
            <!-- Blog Sidebar Widgets Column -->
            <div class="col-md-4">
                <!-- Blog Search Well -->
                @*<div class="well">
                    <h5>Search</h5>
                    <div class="input-group">
                        <input type="text" class="form-control">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </span>
                    </div>*@
                    <!-- /.input-group -->
                </div>
                <div class="adminButtons">
                <!--Buttons hidden unless Admin is logged in-->
                    @if (User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Admin", "Admin", "Posts", null, new { @class = "btn btn-default" })
                        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-default" })
                        @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-default" })
                    }
                </div>
            </div>
        </div>

    <!-- jQuery -->
    <script src="js/jquery.js"></script>

    <!-- Bootstrap Core JavaScript -->
    <script src="js/bootstrap.min.js"></script>

</body>

</html>
