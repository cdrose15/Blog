@model Blog.Models.Post

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit","Posts", FormMethod.Post,
    new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Blog Post: @Model.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <!--Hidden attributes that can not be edited, included but not reason to display-->
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Title)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Updated)
        @Html.HiddenFor(model => model.Slug)

        <div class="container">
            <div class="col-md-8">

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", rows="5",id="editor"  } })
                        @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                    </div>
                </div>
            @if (Model.MediaURL == null)
            {
                <div class="form-group">                   
                    @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input name="image" type="file" class="form-control" id="fileUpload" />
                        @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                @Html.HiddenFor(model => model.MediaURL)
            }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
            </div>
        </div>
            }

            <div>
                @Html.ActionLink("Cancel", "Details", "Posts", new { slug = @Model.Slug }, new { @class = "btn btn-default" })
                @Html.ActionLink("Admin", "Admin", "Posts", new { @class = "btn btn-default" })
            </div>

<!--Script for Tinymce plugin for rich text document writing-->
        @section Scripts{
            <script src="~/Scripts/tinymce/tinymce.min.js"></script>
            <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
            <script>
                 $(window).load(function () {
                 $("#editor").tinymce({});
                 });
           </script>
        }
